// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Otanime.Data;

#nullable disable

namespace Otanime.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250123193102_AddSeed")]
    partial class AddSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("Otanime.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Otanime.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliveryPrice")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliveryType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Otanime.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(700)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Figurine de Naruto Uzumaki en pose de combat",
                            Name = "Naruto Uzumaki",
                            Price = 79.99m,
                            Stock = 10
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Figurine de Sasuke Uchiha avec Sharingan",
                            Name = "Sasuke Uchiha",
                            Price = 89.99m,
                            Stock = 8
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Figurine de Goku en mode Super Saiyan",
                            Name = "Goku Super Saiyan",
                            Price = 99.99m,
                            Stock = 12
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "Figurine de Vegeta en armure de combat",
                            Name = "Vegeta",
                            Price = 84.99m,
                            Stock = 9
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "Figurine de Monkey D. Luffy en Gear 4",
                            Name = "Luffy Gear 4",
                            Price = 94.99m,
                            Stock = 7
                        },
                        new
                        {
                            ProductId = 6,
                            Description = "Figurine de Roronoa Zoro avec trois sabres",
                            Name = "Zoro",
                            Price = 79.99m,
                            Stock = 11
                        },
                        new
                        {
                            ProductId = 7,
                            Description = "Figurine d'Eren Yeager en tenue de combat",
                            Name = "Eren Yeager",
                            Price = 69.99m,
                            Stock = 6
                        },
                        new
                        {
                            ProductId = 8,
                            Description = "Figurine de Mikasa Ackerman avec ses équipements",
                            Name = "Mikasa Ackerman",
                            Price = 74.99m,
                            Stock = 8
                        },
                        new
                        {
                            ProductId = 9,
                            Description = "Figurine de Light Yagami avec Death Note",
                            Name = "Light Yagami",
                            Price = 64.99m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = 10,
                            Description = "Figurine de L, le détective",
                            Name = "L",
                            Price = 69.99m,
                            Stock = 7
                        },
                        new
                        {
                            ProductId = 11,
                            Description = "Figurine de Tanjiro avec sa hache",
                            Name = "Tanjiro Kamado",
                            Price = 89.99m,
                            Stock = 10
                        },
                        new
                        {
                            ProductId = 12,
                            Description = "Figurine de Nezuko en mode combat",
                            Name = "Nezuko Kamado",
                            Price = 84.99m,
                            Stock = 9
                        },
                        new
                        {
                            ProductId = 13,
                            Description = "Figurine d'Ichigo avec Zangetsu",
                            Name = "Ichigo Kurosaki",
                            Price = 79.99m,
                            Stock = 8
                        },
                        new
                        {
                            ProductId = 14,
                            Description = "Figurine de Kakashi en tenue ninja",
                            Name = "Kakashi Hatake",
                            Price = 74.99m,
                            Stock = 7
                        },
                        new
                        {
                            ProductId = 15,
                            Description = "Figurine de Saitama du One Punch Man",
                            Name = "Saitama",
                            Price = 69.99m,
                            Stock = 6
                        },
                        new
                        {
                            ProductId = 16,
                            Description = "Figurine de All Might en mode héroïque",
                            Name = "All Might",
                            Price = 94.99m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = 17,
                            Description = "Figurine d'Edward Elric en alchimiste",
                            Name = "Edward Elric",
                            Price = 84.99m,
                            Stock = 9
                        },
                        new
                        {
                            ProductId = 18,
                            Description = "Figurine de Levi en tenue militaire",
                            Name = "Levi Ackerman",
                            Price = 89.99m,
                            Stock = 8
                        },
                        new
                        {
                            ProductId = 19,
                            Description = "Figurine de Sailor Moon en transformation",
                            Name = "Sailor Moon",
                            Price = 79.99m,
                            Stock = 7
                        },
                        new
                        {
                            ProductId = 20,
                            Description = "Figurine de Gon de Hunter x Hunter",
                            Name = "Gon Freecss",
                            Price = 74.99m,
                            Stock = 6
                        },
                        new
                        {
                            ProductId = 21,
                            Description = "Figurine de Lelouch de Code Geass",
                            Name = "Lelouch Lamperouge",
                            Price = 89.99m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = 22,
                            Description = "Figurine de Spike de Cowboy Bebop",
                            Name = "Spike Spiegel",
                            Price = 79.99m,
                            Stock = 4
                        },
                        new
                        {
                            ProductId = 23,
                            Description = "Figurine de Ryuko de Kill la Kill",
                            Name = "Ryuko Matoi",
                            Price = 84.99m,
                            Stock = 6
                        },
                        new
                        {
                            ProductId = 24,
                            Description = "Figurine de Killua de Hunter x Hunter",
                            Name = "Killua Zoldyck",
                            Price = 74.99m,
                            Stock = 7
                        },
                        new
                        {
                            ProductId = 25,
                            Description = "Figurine de Rin de Fate/Stay Night",
                            Name = "Rin Tohsaka",
                            Price = 69.99m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = 26,
                            Description = "Figurine de Zero Two de Darling in the Franxx",
                            Name = "Zero Two",
                            Price = 94.99m,
                            Stock = 8
                        },
                        new
                        {
                            ProductId = 27,
                            Description = "Figurine de Saber Alter de Fate",
                            Name = "Saber Alter",
                            Price = 89.99m,
                            Stock = 6
                        },
                        new
                        {
                            ProductId = 28,
                            Description = "Figurine d'Asuna de Sword Art Online",
                            Name = "Asuna Yuuki",
                            Price = 79.99m,
                            Stock = 7
                        },
                        new
                        {
                            ProductId = 29,
                            Description = "Figurine de Rem de Re:Zero",
                            Name = "Rem",
                            Price = 84.99m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = 30,
                            Description = "Figurine d'Esdeath de Akame ga Kill",
                            Name = "Esdeath",
                            Price = 94.99m,
                            Stock = 4
                        });
                });

            modelBuilder.Entity("Otanime.ProductOrder", b =>
                {
                    b.Property<int>("ProductOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductOrderId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrders");
                });

            modelBuilder.Entity("Otanime.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "lou@admin.com",
                            FirstName = "Lou",
                            IsAdmin = true,
                            LastName = "Admin",
                            Password = "$2a$11$qEkezkoB72UlLo6MQ/m3tOrHm1nUX6m4EieXix9rlEFxMJCzn8zhW"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "capucine@admin.com",
                            FirstName = "Capucine",
                            IsAdmin = true,
                            LastName = "Admin",
                            Password = "$2a$11$qEkezkoB72UlLo6MQ/m3tOrHm1nUX6m4EieXix9rlEFxMJCzn8zhW"
                        });
                });

            modelBuilder.Entity("Otanime.Image", b =>
                {
                    b.HasOne("Otanime.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Otanime.Order", b =>
                {
                    b.HasOne("Otanime.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Otanime.ProductOrder", b =>
                {
                    b.HasOne("Otanime.Order", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Otanime.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Otanime.Order", b =>
                {
                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("Otanime.Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Otanime.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
