@model List<Order>

@{
    ViewData["Title"] = "Gestion des commandes";
    Layout = "_AdminLayout";

    var statusColors = new Dictionary<OrderStatus, (string bg, string text)>
    {
        { OrderStatus.Pending, ("bg-yellow-100", "text-yellow-800") },
        { OrderStatus.Processing, ("bg-blue-100", "text-blue-800") },
        { OrderStatus.Shipped, ("bg-purple-100", "text-purple-800") },
        { OrderStatus.Delivered, ("bg-green-100", "text-green-800") },
        { OrderStatus.Cancelled, ("bg-red-100", "text-red-800") },
        { OrderStatus.Refunded, ("bg-gray-100", "text-gray-800") }
    };
}

<div class="space-y-6">
    <!-- En-tête -->
    <div class="flex items-center justify-between">
        <h1 class="text-2xl font-bold text-gray-900">Gestion des commandes</h1>
        <div class="flex items-center gap-2">
            <span class="text-sm text-gray-600">
                Total: @ViewBag.TotalOrders commandes
            </span>
        </div>
    </div>

    <!-- Filtres -->
    <div class="grid gap-4 p-4 bg-white rounded-lg shadow-sm md:grid-cols-2 lg:grid-cols-4">
        <form
            method="get"
            class="flex flex-col gap-4 lg:flex-row lg:items-end lg:col-span-4"
        >
            <!-- Statut -->
            <div class="flex-1">
                <label class="block mb-1 text-sm font-medium text-gray-700">
                    Statut
                </label>
                <select
                    name="status"
                    onchange="this.form.submit()"
                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                    <option value="">Tous les statuts</option>
                    @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                    {
                        <option
                            value="@status"
                            selected="@(ViewBag.SelectedStatus == status)"
                        >
                            @status.ToString()
                        </option>
                    }
                </select>
            </div>

            <!-- Période -->
            <div class="flex-1">
                <label class="block mb-1 text-sm font-medium text-gray-700">
                    Période
                </label>
                <select
                    name="period"
                    onchange="this.form.submit()"
                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                    <option value="all">Toutes les périodes</option>
                    <option value="today">Aujourd'hui</option>
                    <option value="week">Cette semaine</option>
                    <option value="month">Ce mois</option>
                </select>
            </div>

            <!-- Actions -->
            <div class="flex gap-2">
                <a
                    asp-action="Orders"
                    class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200"
                >
                    Réinitialiser
                </a>
            </div>
        </form>
    </div>

    <!-- Liste des commandes -->
    <div class="overflow-hidden bg-white rounded-lg shadow">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                <tr>
                    <th
                        class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase"
                    >
                        Commande
                    </th>
                    <th
                        class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase"
                    >
                        Client
                    </th>
                    <th
                        class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase"
                    >
                        Total
                    </th>
                    <th
                        class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase"
                    >
                        Date
                    </th>
                    <th
                        class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase"
                    >
                        Statut
                    </th>
                    <th class="relative px-6 py-3">
                        <span class="sr-only">Actions</span>
                    </th>
                </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                @foreach (var order in Model)
                {
                    <tr class="hover:bg-gray-50">
                        <!-- Commande ID -->
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm">
                                <div class="font-medium text-gray-900">
                                    #@order.Id
                                </div>
                                <div class="text-gray-500">
                                    @order.OrderItems.Count article(s)
                                </div>
                            </div>
                        </td>

                        <!-- Client -->
                        <td class="px-6 py-4">
                            <div class="text-sm">
                                <div class="font-medium text-gray-900">
                                    @order.Email
                                </div>
                                <div class="text-gray-500">
                                    @order.PhoneNumber
                                </div>
                                <div class="truncate max-w-xs text-gray-500">
                                    @order.ShippingAddress, @order.City @order.PostalCode
                                </div>
                            </div>
                        </td>

                        <!-- Total -->
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm font-medium text-gray-900">
                                @order.Total.ToString("C")
                            </div>
                        </td>

                        <!-- Date -->
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm text-gray-900">
                                @order.OrderDate.ToString("dd/MM/yyyy")
                            </div>
                            <div class="text-sm text-gray-500">
                                @order.OrderDate.ToString("HH:mm")
                            </div>
                        </td>

                        <!-- Statut -->
                        <td class="px-6 py-4 whitespace-nowrap">
                            <form
                                asp-action="UpdateOrderStatus"
                                asp-route-id="@order.Id"
                                method="post"
                                class="inline-flex items-center gap-2"
                            >
                                @Html.AntiForgeryToken()
                                <select
                                    name="status"
                                    onchange="this.form.submit()"
                                    class="
                                            px-2 py-1 text-sm border-0 rounded-lg
                                            @(statusColors[order.Status].bg)
                                            @(statusColors[order.Status].text)
                                            focus:ring-2 focus:ring-blue-500
                                        "
                                >
                                    @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                                    {
                                        <option
                                            value="@status"
                                            selected="@(status == order.Status)"
                                            class="text-gray-900 bg-white"
                                        >
                                            @status.ToString()
                                        </option>
                                    }
                                </select>
                            </form>
                        </td>

                        <!-- Actions -->
                        <td class="px-6 py-4 text-right whitespace-nowrap">
                            <button
                                type="button"
                                onclick="showOrderDetails(@order.Id)"
                                class="text-blue-600 hover:text-blue-900"
                            >
                                Détails
                            </button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        @if (ViewBag.TotalPages > 1)
        {
            <div class="flex items-center justify-between px-4 py-3 bg-gray-50 sm:px-6">
                <div class="flex justify-between flex-1 sm:hidden">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <a
                            asp-action="Orders"
                            asp-route-page="@(ViewBag.CurrentPage - 1)"
                            asp-route-status="@ViewBag.SelectedStatus"
                            class="
                                relative inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700
                                bg-white border border-gray-300 rounded-md hover:bg-gray-50
                            "
                        >
                            Précédent
                        </a>
                    }
                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <a
                            asp-action="Orders"
                            asp-route-page="@(ViewBag.CurrentPage + 1)"
                            asp-route-status="@ViewBag.SelectedStatus"
                            class="
                                relative inline-flex items-center px-4 py-2 ml-3 text-sm font-medium text-gray-700
                                bg-white border border-gray-300 rounded-md hover:bg-gray-50
                            "
                        >
                            Suivant
                        </a>
                    }
                </div>

                <div class="hidden sm:flex sm:items-center sm:justify-between">
                    <div>
                        <p class="text-sm text-gray-700">
                            Affichage de
                            <span class="font-medium">
                                @(((ViewBag.CurrentPage - 1) * ViewBag.PageSize) + 1)
                            </span>
                            à
                            <span class="font-medium">
                                @Math.Min(
                                    (int)ViewBag.CurrentPage * (int)ViewBag.PageSize,
                                    (int)ViewBag.TotalItems
                                )
                            </span>
                            sur
                            <span class="font-medium">@ViewBag.TotalItems</span>
                            commandes
                        </p>
                    </div>
                    <div>
                        <nav
                            class="inline-flex -space-x-px rounded-md shadow-sm isolate"
                            aria-label="Pagination"
                        >
                            @for (var i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                <a
                                    asp-action="Orders"
                                    asp-route-page="@i"
                                    asp-route-status="@ViewBag.SelectedStatus"
                                    class="
                                        relative inline-flex items-center px-4 py-2 text-sm font-medium border
                                        @(i == ViewBag.CurrentPage
                                                                                       ? "z-10 bg-blue-600 text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600"
                                                                                       : "text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:outline-offset-0")
                                    "
                                >
                                    @i
                                </a>
                            }
                        </nav>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal Détails Commande -->
<div
    id="orderDetailsModal"
    class="fixed inset-0 z-50 hidden overflow-y-auto"
    aria-labelledby="modal-title"
    role="dialog"
    aria-modal="true"
>
    <div class="flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
        <div
            class="fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75"
            aria-hidden="true"
        ></div>
        <span class="hidden sm:inline-block sm:h-screen sm:align-middle" aria-hidden="true">
            &#8203;
        </span>
        <div
            class="
                inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom
                transition-all transform bg-white rounded-lg shadow-xl sm:my-8
                sm:align-middle sm:max-w-lg sm:w-full sm:p-6
            "
        >
            <div class="absolute top-0 right-0 hidden pt-4 pr-4 sm:block">
                <button
                    type="button"
                    onclick="closeOrderDetails()"
                    class="text-gray-400 bg-white rounded-md hover:text-gray-500"
                >
                    <span class="sr-only">Fermer</span>
                    <svg
                        class="w-6 h-6"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M6 18L18 6M6 6l12 12"
                        />
                    </svg>
                </button>
            </div>
            <div class="sm:flex sm:items-start">
                <div class="w-full mt-3 text-center sm:mt-0 sm:text-left">
                    <h3 class="text-lg font-medium leading-6 text-gray-900" id="modal-title">
                        Détails de la commande
                    </h3>
                    <div class="mt-4">
                        <div id="orderDetailsContent" class="mt-4 space-y-4">
                            <!-- Le contenu sera chargé dynamiquement -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showOrderDetails(orderId) {
            const modal = document.getElementById('orderDetailsModal');
            const content = document.getElementById('orderDetailsContent');

            // Charger les détails de la commande
            fetch(`/Admin/GetOrderDetails/${orderId}`)
                .then(response => response.text())
                .then(html => {
                    content.innerHTML = html;
                    modal.classList.remove('hidden');
                });
        }

        function closeOrderDetails() {
            const modal = document.getElementById('orderDetailsModal');
            modal.classList.add('hidden');
        }

        // Fermer la modal avec la touche Échap
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeOrderDetails();
            }
        });
    </script>
}
