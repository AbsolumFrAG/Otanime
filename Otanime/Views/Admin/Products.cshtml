@model List<Product>

@{
    ViewData["Title"] = "Gestion des produits";
    Layout = "_AdminLayout";
}

<div class="space-y-6">
    <!-- En-tête avec actions -->
    <div class="flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
        <h1 class="text-2xl font-bold text-gray-900">Gestion des produits</h1>
        <a
            asp-action="CreateProduct"
            class="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-700"
        >
            <svg
                xmlns="http://www.w3.org/2000/svg"
                class="w-5 h-5 mr-2"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 6v6m0 0v6m0-6h6m-6 0H6"
                />
            </svg>
            Ajouter un produit
        </a>
    </div>

    <!-- Filtres et recherche -->
    <div class="p-4 bg-white rounded-lg shadow-sm">
        <form method="get" class="grid gap-4 sm:grid-cols-2 lg:grid-cols-4">
            <!-- Catégorie -->
            <div>
                <label for="category" class="block mb-1 text-sm font-medium text-gray-700">
                    Catégorie
                </label>
                <select
                    name="category"
                    id="category"
                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                    <option value="">Toutes</option>
                    @foreach (var category in ViewBag.Categories ?? new string[] {})
                    {
                        <option
                            value="@category"
                            selected="@(category == ViewBag.SelectedCategory)"
                        >
                            @category
                        </option>
                    }
                </select>
            </div>

            <!-- Tri -->
            <div>
                <label for="sortBy" class="block mb-1 text-sm font-medium text-gray-700">
                    Trier par
                </label>
                <select
                    name="sortBy"
                    id="sortBy"
                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                    <option value="name" selected="@(ViewBag.SortBy == "name")">Nom (A-Z)</option>
                    <option value="price" selected="@(ViewBag.SortBy == "price")">Prix croissant</option>
                    <option value="price_desc" selected="@(ViewBag.SortBy == "price_desc")">Prix décroissant</option>
                    <option value="stock" selected="@(ViewBag.SortBy == "stock")">Stock</option>
                </select>
            </div>

            <!-- Boutons d'action -->
            <div class="flex gap-2 sm:col-span-2 lg:col-span-4">
                <button
                    type="submit"
                    class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-700"
                >
                    Filtrer
                </button>
                <a
                    asp-action="Products"
                    class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200"
                >
                    Réinitialiser
                </a>
            </div>
        </form>
    </div>

    <!-- Liste des produits -->
    <div class="overflow-hidden bg-white rounded-lg shadow-sm">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th
                            scope="col"
                            class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase"
                        >
                            Produit
                        </th>
                        <th
                            scope="col"
                            class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase"
                        >
                            Catégorie
                        </th>
                        <th
                            scope="col"
                            class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase"
                        >
                            Prix
                        </th>
                        <th
                            scope="col"
                            class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase"
                        >
                            Stock
                        </th>
                        <th
                            scope="col"
                            class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase"
                        >
                            Status
                        </th>
                        <th
                            scope="col"
                            class="relative px-6 py-3"
                        >
                            <span class="sr-only">Actions</span>
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var product in Model)
                    {
                        <tr class="transition-colors hover:bg-gray-50">
                            <!-- Produit -->
                            <td class="px-6 py-4">
                                <div class="flex items-center">
                                    <img
                                        class="flex-shrink-0 object-cover w-10 h-10 rounded-lg"
                                        src="@product.ImageUrl"
                                        alt="@product.Name"
                                    />
                                    <div class="ml-4">
                                        <div class="font-medium text-gray-900 truncate max-w-[200px]">
                                            @product.Name
                                        </div>
                                        <div class="text-sm text-gray-500 truncate max-w-[200px]">
                                            @product.Description
                                        </div>
                                    </div>
                                </div>
                            </td>

                            <!-- Catégorie -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex px-2 text-xs font-semibold leading-5 text-blue-800 bg-blue-100 rounded-full">
                                    @product.Category
                                </span>
                            </td>

                            <!-- Prix -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm font-medium text-gray-900">
                                    @product.Price.ToString("C")
                                </div>
                            </td>

                            <!-- Stock -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm @(product.StockQuantity <= 10 ? "text-red-600" : "text-gray-900")">
                                    @product.StockQuantity unités
                                </div>
                            </td>

                            <!-- Status -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @if (product is { InStock: true, StockQuantity: > 0 })
                                {
                                    <span class="inline-flex px-2 text-xs font-semibold leading-5 text-green-800 bg-green-100 rounded-full">
                                        En stock
                                    </span>
                                }
                                else
                                {
                                    <span class="inline-flex px-2 text-xs font-semibold leading-5 text-red-800 bg-red-100 rounded-full">
                                        Rupture de stock
                                    </span>
                                }
                            </td>

                            <!-- Actions -->
                            <td class="px-6 py-4 text-sm font-medium text-right whitespace-nowrap">
                                <div class="flex items-center justify-end space-x-2">
                                    <a
                                        asp-action="EditProduct"
                                        asp-route-id="@product.Id"
                                        class="text-blue-600 hover:text-blue-900"
                                    >
                                        Modifier
                                    </a>
                                    <form
                                        asp-action="DeleteProduct"
                                        asp-route-id="@product.Id"
                                        method="post"
                                        class="inline"
                                        onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce produit ?');"
                                    >
                                        @Html.AntiForgeryToken()
                                        <button
                                            type="submit"
                                            class="text-red-600 hover:text-red-900"
                                        >
                                            Supprimer
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        @if (ViewBag.TotalPages > 1)
        {
            <div class="flex items-center justify-between px-4 py-3 bg-gray-50 sm:px-6">
                <div class="flex justify-between flex-1 sm:hidden">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <a
                            asp-action="Products"
                            asp-route-page="@(ViewBag.CurrentPage - 1)"
                            asp-route-search="@ViewBag.Search"
                            asp-route-category="@ViewBag.SelectedCategory"
                            asp-route-sortBy="@ViewBag.SortBy"
                            class="relative inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
                        >
                            Précédent
                        </a>
                    }
                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <a
                            asp-action="Products"
                            asp-route-page="@(ViewBag.CurrentPage + 1)"
                            asp-route-search="@ViewBag.Search"
                            asp-route-category="@ViewBag.SelectedCategory"
                            asp-route-sortBy="@ViewBag.SortBy"
                            class="relative inline-flex items-center px-4 py-2 ml-3 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
                        >
                            Suivant
                        </a>
                    }
                </div>

                <div class="hidden sm:flex sm:items-center sm:justify-between">
                    <div>
                        @{
                            var start = ((ViewBag.CurrentPage - 1) * ViewBag.PageSize) + 1;
                            var end = Math.Min(
                                (int)ViewBag.CurrentPage * (int)ViewBag.PageSize,
                                (int)ViewBag.TotalItems
                            );
                        }
                        <p class="text-sm text-gray-700">
                            Affichage de
                            <span class="font-medium">@start</span>
                            à
                            <span class="font-medium">@end</span>
                            sur
                            <span class="font-medium">@ViewBag.TotalItems</span>
                            résultats
                        </p>
                    </div>
                    <div>
                        <nav
                            class="inline-flex -space-x-px rounded-md shadow-sm isolate"
                            aria-label="Pagination"
                        >
                            @for (var i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                <a
                                    asp-action="Products"
                                    asp-route-page="@i"
                                    asp-route-search="@ViewBag.Search"
                                    asp-route-category="@ViewBag.SelectedCategory"
                                    asp-route-sortBy="@ViewBag.SortBy"
                                    class="
                                        relative inline-flex items-center px-4 py-2 text-sm font-medium border
                                        @(i == ViewBag.CurrentPage 
                                            ? "z-10 bg-blue-600 text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600"
                                            : "text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:outline-offset-0")
                                    "
                                >
                                    @i
                                </a>
                            }
                        </nav>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Recherche en temps réel (debounce)
        const searchInput = document.getElementById('search');
        let searchTimeout;

        searchInput?.addEventListener('input', (e) => {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                e.target.form.submit();
            }, 500);
        });
    </script>
}
