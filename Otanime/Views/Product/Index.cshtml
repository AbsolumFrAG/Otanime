@model Otanime.ViewModels.ProductListViewModel

@{
    ViewData["Title"] = "Boutique de Figurines";
}

<div class="container mx-auto px-4 py-8">
    <!-- En-tête et barre de filtres -->
    <div class="mb-8 space-y-4">
        <h1 class="text-4xl font-bold text-gray-900">@ViewData["Title"]</h1>
        
        <form asp-action="Index" method="get" class="bg-white p-6 rounded-xl shadow-sm">
            <div class="flex flex-col md:flex-row gap-4 items-end">
                <!-- Champ de recherche -->
                <div class="flex-1 w-full">
                    <div class="relative">
                        <input type="text" 
                               name="searchTerm" 
                               value="@Model.SearchTerm" 
                               class="input input-bordered w-full pl-10" 
                               placeholder="Rechercher des figurines...">
                        <svg class="w-5 h-5 absolute left-3 top-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </div>
                </div>

                <!-- Filtres groupés -->
                <div class="flex flex-col sm:flex-row gap-4 w-full md:w-auto">
                    <select name="category" class="select select-bordered w-full">
                        <option value="">Toutes catégories</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category" selected="@(category == Model.SelectedCategory)">@category</option>
                        }
                    </select>

                    <select name="sortBy" class="select select-bordered w-full">
                        <option value="name" selected="@(Model.SortBy == "name")">Trier par nom</option>
                        <option value="price" selected="@(Model.SortBy == "price")">Prix croissant</option>
                        <option value="price_desc" selected="@(Model.SortBy == "price_desc")">Prix décroissant</option>
                        <option value="newest" selected="@(Model.SortBy == "newest")">Nouveautés</option>
                    </select>
                </div>

                <button type="submit" class="btn btn-primary w-full md:w-auto">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"></path>
                    </svg>
                    Appliquer
                </button>
            </div>
        </form>
    </div>

    <!-- Liste des produits -->
    @if (!Model.Products.Any())
    {
        <div class="alert alert-info shadow-lg">
            <div>
                <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current flex-shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span>Aucun résultat trouvé. Essayez de modifier vos filtres.</span>
            </div>
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            @foreach (var product in Model.Products)
            {
                <div class="card bg-base-100 shadow-md hover:shadow-xl transition-shadow duration-300 relative">
                    <!-- Badge Nouveauté -->
                    @if ((DateTime.Now - product.CreatedAt).TotalDays < 7)
                    {
                        <div class="badge badge-accent absolute top-2 right-2 animate-pulse">Nouveau!</div>
                    }
                    
                    <figure class="px-4 pt-4">
                        <img src="@product.ImageUrl" 
                             alt="@product.Name" 
                             class="rounded-xl h-48 w-full object-cover hover:scale-105 transition-transform duration-300" />
                    </figure>
                    
                    <div class="card-body p-4">
                        <div class="flex items-start justify-between mb-2">
                            <h2 class="card-title text-lg">@product.Name</h2>
                            <span class="badge badge-outline">@product.Category</span>
                        </div>
                        
                        <p class="text-gray-600 line-clamp-2 text-sm mb-4">@product.Description</p>
                        
                        <div class="flex items-center justify-between">
                            <div class="space-y-1">
                                <span class="text-2xl font-bold">@product.Price.ToString("C")</span>
                                <div class="text-sm @(product.InStock ? "text-success" : "text-error")">
                                    @(product.InStock ? "En stock" : "Rupture")
                                </div>
                            </div>
                            
                            <form asp-controller="Cart" asp-action="AddToCart" method="post" class="flex items-center gap-2">
                                <input type="hidden" name="productId" value="@product.Id" />
                                <input type="number" 
                                       name="quantity" 
                                       value="1" 
                                       min="1" 
                                       class="input input-bordered input-sm w-16 text-center" />
                                <button type="submit" class="btn btn-primary btn-sm">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"></path>
                                    </svg>
                                </button>
                            </form>
                        </div>
                    </div>
                    
                    <a asp-action="Details" asp-route-id="@product.Id" class="absolute inset-0 z-10"></a>
                </div>
            }
        </div>

        <!-- Pagination -->
        <div class="mt-8 flex justify-center">
            <div class="join">
                @for (var i = 1; i <= Model.Pagination.TotalPages; i++)
                {
                    <a asp-action="Index" 
                       asp-route-page="@i"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-category="@Model.SelectedCategory"
                       asp-route-sortBy="@Model.SortBy"
                       class="join-item btn @(i == Model.Pagination.CurrentPage ? "btn-active" : "")">
                        @i
                    </a>
                }
            </div>
        </div>
    }
</div>

<!-- Notifications -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="toast toast-top toast-end">
        <div class="alert alert-success shadow-lg">
            <div>
                <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current flex-shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span>@TempData["SuccessMessage"]</span>
            </div>
        </div>
    </div>
}

<style>
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    
    .toast {
        animation: slideIn 0.3s ease-out;
    }

    @@keyframes slideIn {
        from { transform: translateX(100%); }
        to { transform: translateX(0); }
    }
</style>